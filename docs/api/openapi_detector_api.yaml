openapi: 3.0.1
info:
  title: Detectors API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
paths:
  /api/v1/text/contents:
    post:
      summary: Text Content Analysis Unary Handler
      description: >-
        Detectors that work on content text, be it user prompt or generated
        text. Generally classification type detectors qualify for this. <br>
      operationId: text_content_analysis_unary_handler
      parameters:
        - name: detector-id
          in: header
          required: true
          schema:
            type: string
            title: Detector-Id
          example: dummy-en-pii-v1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentAnalysisHttpRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContentsAnalysisResponse'
                title: >-
                  Response Text Content Analysis Unary Handler Api V1 Text
                  Content Post
                example:
                -
                  - start: 15
                    end: 25
                    detection_type: pii
                    text: foo@bar.com
                    detection: EmailAddress
                    score: 0.99
                  - start: 105
                    end: 116
                    text: 123-456-7890
                    detection_type: pii
                    detection: SocialSecurity
                    score: 0.99
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/text/generation:
    post:
      summary: Generation Analysis Unary Handler
      description: >-
        Detectors that run on prompt and text generation output.  <br>
      operationId: generation_analysis_unary_handler
      parameters:
        - name: detector-id
          in: header
          required: true
          schema:
            type: string
            title: Detector-Id
          example: dummy-en-generation-detector-v1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerationAnalysisHttpRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenerationAnalysisResponse'
                title: >-
                  Response Generation Analysis Unary Handler Api V1 Text
                  Generation Post
                example:
                  - detection: relevant
                    detection_type: dummy_detector_type
                    score: 0.89
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/text/chat:
    post:
      summary: Chat Analysis Unary Handler
      description: >-
        Detectors that analyze chat messages and provide detections <br>
      operationId: chat_analysis_unary_handler_api_v1_text_chat_post
      parameters:
        - name: detector-id
          in: header
          required: false
          schema:
            type: string
            default: dummy-en-chat-v1
            title: Detector-Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatAnalysisHttpRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatAnalysisResponse'
                title: >-
                  Response Chat Analysis Unary Handler Api V1 Text Chat Post
                example:
                  - detection: "detection_type"
                    detection_type: "dummy_detector_type"
                    score: 0.99
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/text/context/doc:
    post:
      summary: Context Analysis Unary Handler
      description: >-
        Detectors that work on a context created by document(s).<br>
      operationId: context_analysis_unary_handler_api_v1_text_context_doc_post
      parameters:
        - name: detector-id
          in: header
          required: true
          schema:
            type: string
            title: Detector-Id
          example: dummy-en-detector-v1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContextAnalysisHttpRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContextAnalysisResponse'
                title: >-
                  Response Context Analysis Unary Handler Api V1 Text Context
                  Doc Post
                example:
                  - detection: "relevant"
                    detection_type: "dummy_detector_type"
                    score: 0.99
                    evidence:
                      - name: "context_chunk"
                        value: "Context sentence 1"
                        score: 0.333
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /health:
    get:
      tags:
        - Health
      summary: Performs quick liveliness check of the detector service
      operationId: health
      responses:
        '200':
          description: Healthy
components:
  schemas:
    ChatAnalysisHttpRequest:
      properties:
        messages:
          title: Chat Messages
          type: array
          items:
            allOf:
              - $ref: https://raw.githubusercontent.com/openai/openai-openapi/master/openapi.yaml#/components/schemas/ChatCompletionRequestMessage
              - type: object
        detector_params:
          type: object
          default: {}
          title: Detector Parameters
          description: Optional detector parameters, used on a per-detector basis
      type: object
      required:
        - messages
      title: ChatAnalysisHttpRequest
    ChatAnalysisResponse:
      properties:
        detection:
          type: string
          title: Detection
          example: quantity_1
        detection_type:
          type: string
          title: Detection Type
          example: dummy_detector_type
        score:
          type: number
          title: Score
          example: 0.684
        evidence:
          anyOf:
            - items:
                $ref: '#/components/schemas/EvidenceObj'
              type: array
          description: Optional field providing evidence for the provided detection
      type: object
      required:
        - detection
        - detection_type
        - score
      title: ChatAnalysisResponse
    ContextAnalysisHttpRequest:
      properties:
        content:
          type: string
          title: Content
          example: What is the name of the solar powered car race held every two years?
        context_type:
          allOf:
            - $ref: '#/components/schemas/ContextType'
          example: url
        context:
          anyOf:
            - items:
                type: string
              type: array
          title: Context
          description: URLs of the content to be used
          example:
            - https://en.wikipedia.org/wiki/IBM
            - https://research.ibm.com/
        detector_params:
          type: object
          default: {}
          title: Detector Parameters
          description: Optional detector parameters, used on a per-detector basis
      type: object
      required:
        - content
        - context_type
        - context
      title: ContextAnalysisHttpRequest
    ContextAnalysisResponse:
      properties:
        detection:
          type: string
          title: Detection
          example: relevant
        detection_type:
          type: string
          title: Detection Type
          example: dummy_detector_type
        score:
          type: number
          title: Score
          example: 0.5
        evidence:
          anyOf:
            - items:
                $ref: '#/components/schemas/EvidenceObj'
              type: array
          description: Optional field providing evidence for the provided detection
      type: object
      required:
        - detection
        - detection_type
        - score
      title: ContextAnalysisResponse
    ContextType:
      type: string
      enum:
        - url
        - chunks
        - document
      title: ContextType
      description: >-
        A collection of name/value pairs.

        Access them by:

        - attribute access::

        >>> ContextType.url <ContextType.url: 'url'>

        - value lookup:

        >>> ContextType('url') <ContextType.url: 'url'>

        - name lookup:

        >>> ContextType['url'] <ContextType.url: 'url'>

        Enumerations can be iterated over, and know how many members they have:

        >>> len(ContextType) 3

        >>> list(ContextType) [<ContextType.url: 'url'>, <ContextType.chunks:
        'chunks'>, <ContextType.document: 'document'>]

        Methods can be added to enumerations, and members can have their own
        attributes -- see the documentation for details.
    Evidence:
      properties:
        name:
          type: string
          title: Name
          description: Name for the evidence
          example: context_chunk
        value:
          type: string
          title: Value
          description: Value for the evidence
          example: one chunk of context
        score:
          type: number
          title: Score
          example: 0.5
      type: object
      required:
        - name
      title: Evidence
    EvidenceObj:
      properties:
        name:
          type: string
          title: Name
          description: Name for the evidence
          example: context
        value:
          type: string
          title: Value
          description: Value for the evidence
          example: This is one context sentence.
        score:
          type: number
          title: Score
          example: 0.5
        evidence:
          anyOf:
            - items:
                $ref: '#/components/schemas/Evidence'
              type: array
          description: Evidence on evidence value
      type: object
      required:
        - name
      title: EvidenceObj
    GenerationAnalysisHttpRequest:
      properties:
        prompt:
          type: string
          title: Prompt
          description: prompt is the user input to the LLM
          example: This is my amazing prompt
        generated_text:
          type: string
          title: Generated Text
          description: Generated response from the LLM
          example: Some text generated by an LLM
        detector_params:
          type: object
          default: {}
          title: Detector Parameters
          description: Optional detector parameters, used on a per-detector basis
      type: object
      required:
        - prompt
        - generated_text
      title: GenerationAnalysisHttpRequest
    GenerationAnalysisResponse:
      properties:
        detection:
          type: string
          title: Detection
          example: foo
        detection_type:
          type: string
          title: Detection Type
          example: bar
        score:
          type: number
          title: Score
          example: 0.5
        evidence:
          anyOf:
            - items:
                $ref: '#/components/schemas/EvidenceObj'
              type: array
          description: Optional field providing evidence for the provided detection
      type: object
      required:
        - detection
        - detection_type
        - score
      title: GenerationAnalysisResponse
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
      required:
        - code
        - message
    ContentAnalysisHttpRequest:
      properties:
        contents:
          type: array
          title: Contents
          description: >-
            Field allowing users to provide list of documents for analysis. Note, results of this endpoint will contain
            analysis / detection of each of the provided documents in the order they are present in the `contents` object.
          items:
            type: string
            example: >-
              Your email is test@ibm.com! Only the next instance of email will be
              processed. test@ibm.com. Your SSN is 123-45-6789.
        detector_params:
          type: object
          default: {}
          title: Detector Parameters
          description: Optional detector parameters, used on a per-detector basis
      type: object
      required:
        - contents
      title: ContentAnalysisHttpRequest
    ContentsAnalysisResponse:
      type: array
      items:
        $ref: '#/components/schemas/ContentAnalysisResponse'
    ContentAnalysisResponse:
      properties:
        start:
          type: integer
          title: Start
          example: 14
        end:
          type: integer
          title: End
          example: 26
        text:
          type: string
          title: Text
          example: foo@bar.com
        detection:
          type: string
          title: Detection
          example: Net.EmailAddress
        detection_type:
          type: string
          title: Detection Type
          example: pii
        score:
          type: number
          title: Score
          example: 0.8
        evidence:
          anyOf:
            - items:
                $ref: '#/components/schemas/EvidenceObj'
              type: array
          description: Optional field providing evidence for the provided detection
      type: object
      required:
        - start
        - end
        - detection
        - detection_type
        - score
      title: ContentAnalysisResponse
