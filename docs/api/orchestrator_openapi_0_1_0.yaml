openapi: 3.0.1
info:
  title: FMS Orchestrator API
  version: 0.1.0
tags:
    - name: Task - Text Generation, with detection
      description: Detections on text generation model input and/or output
    - name: Task - Detection
      description: Standalone detections
    - name: Task - Chat Completions, with detection
      description: Detections on list of messages comprising a conversation and/or completions from a model
paths:
  /health:
    get:
      tags:
        - Health
      summary: Performs quick liveliness check of the orchestrator service
      operationId: health
      responses:
        '200':
          description: Healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  fms-guardrails-orchestr8:
                    type: string
                    example: 0.1.0
  /info:
    get:
      tags:
        - Health
      summary: Returns the latest results of a health check probe of clients currently configured for the orchestrator
      operationId: info
      parameters:
        - name: probe
          in: query
          description: Toggle whether to trigger the actual probe or just return the latest results from cache. If the health cache is empty then probing will occur regardless. Running the probe will take longer but will also update the cache.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Orchestrator successfully probed client health statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthProbeResponse'
        '503':
          description: Orchestrator failed to probe client health statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthProbeResponse'
  /api/v1/task/classification-with-text-generation:
    post:
      tags:
        - Task - Text Generation, with detection
      summary: Guardrails Unary Handler
      operationId: >-
        guardrails_unary_handler_api_v1_text_classification_with_text_generation_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuardrailsHttpRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassifiedGeneratedTextResult'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/task/server-streaming-classification-with-text-generation:
    post:
      tags:
        - Task - Text Generation, with detection
      summary: Guardrails Server Stream Handler
      operationId: >-
        guardrails_server_stream_handler_api_v1_text_server_streaming_classification_with_text_generation_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GuardrailsHttpRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassifiedGeneratedTextStreamResult'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v2/text/generation-detection:
    post:
      tags:
        - Task - Text Generation, with detection
      summary: Generation task performing detection on prompt and generated text
      operationId: >-
        api_v2_detection_text_generation_detection_unary_handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerationDetectionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationDetectionResponse'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v2/text/detection/content:
    post:
      tags:
        - Task - Detection
      summary: Detection task on input content
      operationId: >-
        api_v2_detection_text_content_unary_handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectionContentRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionContentResponse'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v2/text/detection/chat:
    post:
      tags:
        - Task - Detection
      summary: Detection task on input chat
      operationId: >-
        api_v2_detection_text_chat_unary_handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectionChatRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionChatResponse'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v2/text/detection/context:
    post:
      tags:
        - Task - Detection
      summary: Detection task on input content based on context documents
      operationId: >-
        api_v2_detection_text_context_docs_unary_handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetectionContextDocsRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionContextDocsResponse'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v2/text/detection/generated:
    post:
      tags:
        - Task - Detection
      summary: Detection task performing detection on prompt and generated text
      operationId: >-
        api_v2_detection_text_generated_unary_handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratedTextDetectionRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedTextDetectionResponse'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
     

components:
  schemas:
    HealthStatus:
        type: string
        enum:
            - HEALTHY
            - UNHEALTHY
            - UNKNOWN
        title: Health Status
    HealthCheckResult:
      oneOf:
        - properties:
            health_status:
              $ref: '#/components/schemas/HealthStatus'
            response_code:
              type: string
              title: Response Code
              example: "HTTP 200 OK"
            reason:
              type: string
              title: Reason
              example: "Service not found"
          required:
            - health_status
            - response_code
        - additionalProperties:
            $ref: '#/components/schemas/HealthStatus'
      type: object
      title: Health Check Response
    HealthProbeResponse:
      properties:
        services:
          type: object
          title: Health status for each client service
          properties:
            generation:
              type: object
              title: Generation Services
              items:
                $ref: '#/components/schemas/HealthCheckResult'
            detectors:
              type: object
              title: Detector Services
              items:
                $ref: '#/components/schemas/HealthCheckResult'
            chunkers:
              type: object
              title: Chunker Services
              items:
                $ref: '#/components/schemas/HealthCheckResult'
      required:
        - services
      type: object
      title: Health Probe Response
    DetectionContentRequest:
      properties:
        detectors:
          type: object
          title: Detectors
          default: {}
          example: 
            hap-v1-model-en: {}
        content:
          type: string
          title: Content
      required: ["detectors", "content"]
      additionalProperties: false
      type: object
      title: Content Detection Request
    DetectionContentResponse:
      properties:
        detections:
          type: array
          items:
            $ref: '#/components/schemas/DetectionContentResponseObject'
      additionalProperties: false
      required: ["detections"]
      type: object
      title: Content Detection Response
    DetectionContentResponseObject:
      properties:
        start:
          type: integer
          title: Start
        end:
          type: integer
          title: End
        text:
          type: string
          title: Text
        detection_type:
          type: string
          title: Detection Type
        detection:
          type: string
          title: Detection
        score:
          type: number
          title: Score

    DetectionChatRequest:
      properties:
        detectors:
          type: object
          title: Detectors
          default: {}
          example: 
            chat-v1-model-en: {}
        chat_history:
          type: array
          title: Chat History
          default: {}
          items:
            $ref: '#/components/schemas/ChatHistoryObject'
          example:
            - content: "Hi, is this powered by siri or alexa?"
              author: "user"
            - content: "Better, it's watsonx"
              author: "assistant"
            - content: "You are a helpful assistant."
              author: "system"
      additionalProperties: false
      required: ["detectors", "chat_history"]
      type: object
      title: Chat Detection Request
    ChatHistoryObject:
      properties:
        content:
          type: string
          title: Content
          default: ""
          example: "Hi I am AI Agent"
        author:
          type: string
          title: Author
          default: ""
          example: "assistant"
      title: Chat History Object
      required: ["content", "author"]
    DetectionChatResponse:
      properties:
        detections:
          type: array
          items:
            type: object
            title: Detection Object
            properties:
              detection_type:
                type: string
                title: Detection Type
              detection:
                type: string
                title: Detection
              score:
                type: number
                title: Score
      title: Detection Chat Response
      required: ["detections"]
    
    DetectionContextDocsRequest:
      properties:
        detectors:
          type: object
          title: Detectors
          default: {}
          example: 
            context-v1-model-en: {}
        content:
          type: string
          title: Content
          default: ""
          example: "What is the name of the solar powered car race held every two years?"
        context_type:
          type: string
          title: Context Type
          default: ""
          example: "url"
        context:
          type: array
          title: Context
          default: []
          items:
            type: string
          example:
            - "https://en.wikipedia.org/wiki/IBM"
            - "https://research.ibm.com/"
      required: ["detectors", "content", "context_type", "context"]
      title: Detection Context Docs Request
    DetectionContextDocsResponse:
      properties:
        detections:
          type: array
          items:
            type: object
            title: Detection Object
            properties:
              detection_type:
                type: string
                title: Detection Type
              detection:
                type: string
                title: Detection
              score:
                type: number
                title: Score
              evidence:
                anyOf:
                - items:
                    $ref: '#/components/schemas/EvidenceObj'
                  type: array
      required: ["detections"]
      title: Detection Context Docs Response
    GenerationDetectionRequest:
      properties:
        model_id:
          type: string
          title: Model Id
        prompt:
          type: string
          title: Prompt
        detectors:
          type: object
          title: Detectors
          default: {}
          example: 
            generation-detection-v1-model-en: {}
        text_gen_parameters:
          allOf:
            - $ref: '#/components/schemas/GuardrailsTextGenerationParameters'
      type: object
      required: ["model_id", "prompt", "detectors"]
      title: Generation-Detection Request
    GenerationDetectionResponse:
      properties:
        generated_text:
          type: string
          title: Generated Text
        detections:
          type: array
          items:
            type: object
            title: Detection Object
            properties:
              detection_type:
                type: string
                title: Detection Type
              detection:
                type: string
                title: Detection
              score:
                type: number
                title: Score
        input_token_count:
          type: string
          title: Input token Count
      title: Generation Detection Response
      required: ["generated_text", "detections"]
            
    GeneratedTextDetectionRequest:
      properties:
        prompt:
          type: string
          title: Prompt
        generated_text:
          type: string
          title: Generated Text
        detectors:
          type: object
          title: Detectors
          default: {}
          example: 
            generated-detection-v1-model-en: {}
      type: object
      required: ["generated_text", "prompt", "detectors"]
      title: Generated-Text Detection Request
    GeneratedTextDetectionResponse:
      properties:
        detections:
          type: array
          items:
            type: object
            title: Detection Object
            properties:
              detection_type:
                type: string
                title: Detection Type
              detection:
                type: string
                title: Detection
              score:
                type: number
                title: Score
      required: ["detections"]
      title: Generated Text Detection Docs Response
      
    
    ClassifiedGeneratedTextResult:
      properties:
        generated_text:
          anyOf:
            - type: string
          title: Generated Text
        token_classification_results:
          anyOf:
            - $ref: '#/components/schemas/TextGenTokenClassificationResults'
        finish_reason:
          anyOf:
            - $ref: '#/components/schemas/FinishReason'
        generated_token_count:
          anyOf:
            - type: integer
          title: Generated Token Count
        seed:
          anyOf:
            - type: integer
          title: Seed
        input_token_count:
          anyOf:
            - type: integer
          title: Input Token Count
        warnings:
          anyOf:
            - items:
                $ref: '#/components/schemas/InputWarning'
              type: array
          title: Warnings
        tokens:
          anyOf:
            - items:
                $ref: '#/components/schemas/GeneratedToken'
              type: array
          title: Tokens
        input_tokens:
          anyOf:
            - items:
                $ref: '#/components/schemas/GeneratedToken'
              type: array
          title: Input Tokens
      additionalProperties: false
      required: ["input_token_count", "token_classification_results"]
      type: object
      title: Classified Generated Text Result
    ClassifiedGeneratedTextStreamResult:
      properties:
        generated_text:
          anyOf:
            - type: string
          title: Generated Text
        token_classification_results:
          anyOf:
            - $ref: '#/components/schemas/TextGenTokenClassificationResults'
        finish_reason:
          anyOf:
            - $ref: '#/components/schemas/FinishReason'
        generated_token_count:
          anyOf:
            - type: integer
          title: Generated Token Count
        seed:
          anyOf:
            - type: integer
          title: Seed
        input_token_count:
          anyOf:
            - type: integer
          title: Input Token Count
        warnings:
          anyOf:
            - items:
                $ref: '#/components/schemas/InputWarning'
              type: array
          title: Warnings
        tokens:
          anyOf:
            - items:
                $ref: '#/components/schemas/GeneratedToken'
              type: array
          title: Tokens
        input_tokens:
          anyOf:
            - items:
                $ref: '#/components/schemas/GeneratedToken'
              type: array
          title: Input Tokens
        processed_index:
          anyOf:
            - type: integer
          title: Processed Index
        start_index:
          type: integer
          title: Start Index
      additionalProperties: false
      required: ["input_token_count", "token_classification_results"]
      type: object
      title: Classified Generated Text Stream Result
    Error:
      type: object
      properties:
        code:
          type: number
        details:
          type: string
      required:
        - code
        - details
    ExponentialDecayLengthPenalty:
      properties:
        start_index:
          type: integer
          title: Start Index
        decay_factor:
          type: number
          title: Decay Factor
      additionalProperties: false
      type: object
      title: Exponential Decay Length Penalty
    Evidence:
      properties:
        name:
          type: string
          title: Name
          description: Name for the evidence
          example: context_chunk
        value:
          type: string
          title: Value
          description: Value for the evidence
          example: one chunk of context
        score:
          type: number
          title: Score
          example: 0.5
      type: object
      required:
        - name
      title: Evidence
    EvidenceObj:
      properties:
        name:
          type: string
          title: Name
          description: Name for the evidence
          example: context
        value:
          type: string
          title: Value
          description: Value for the evidence
          example: This is one context sentence.
        score:
          type: number
          title: Score
          example: 0.5
        evidence:
          anyOf:
            - items:
                $ref: '#/components/schemas/Evidence'
              type: array
      type: object
      required:
        - name
      title: EvidenceObj
    FinishReason:
      type: string
      enum:
        - NOT_FINISHED
        - MAX_TOKENS
        - EOS_TOKEN
        - CANCELLED
        - TIME_LIMIT
        - STOP_SEQUENCE
        - TOKEN_LIMIT
        - ERROR
      title: Finish Reason
    GeneratedToken:
      properties:
        text:
          type: string
          title: Text
        logprob:
          anyOf:
            - type: number
          title: Logprob
        rank:
          anyOf:
            - type: integer
          title: Rank
      additionalProperties: false
      type: object
      required: ["text"]
      title: Generated Token
    GuardrailsConfig:
      properties:
        input:
          type: object
          title: Input
          default:
            models: {}
            masks: []
        output:
          additionalProperties:
            type: object
          type: object
          title: Output
          default:
            models: {}
      type: object
      title: Guardrails Config
    GuardrailsHttpRequest:
      properties:
        model_id:
          type: string
          title: Model Id
        inputs:
          type: string
          title: Inputs
        guardrail_config:
          allOf:
            - $ref: '#/components/schemas/GuardrailsConfig'
          default:
            input:
              masks: []
              models: {}
            output:
              models: {}
        text_gen_parameters:
          allOf:
            - $ref: '#/components/schemas/GuardrailsTextGenerationParameters'
      type: object
      required:
        - model_id
        - inputs
      title: Guardrails Http Request
    GuardrailsTextGenerationParameters:
      properties:
        max_new_tokens:
          type: integer
          title: Max New Tokens
        min_new_tokens:
          type: integer
          title: Min New Tokens
        truncate_input_tokens:
          type: integer
          title: Truncate Input Tokens
        decoding_method:
          type: string
          title: Decoding Method
        top_k:
          type: integer
          title: Top K
        top_p:
          type: number
          title: Top P
        typical_p:
          type: number
          title: Typical P
        temperature:
          type: number
          title: Temperature
        repetition_penalty:
          type: number
          title: Repetition Penalty
        max_time:
          type: number
          title: Max Time
        exponential_decay_length_penalty:
          allOf:
            - $ref: '#/components/schemas/ExponentialDecayLengthPenalty'
        stop_sequences:
          items:
            type: string
          type: array
          title: Stop Sequences
        seed:
          type: integer
          title: Seed
        preserve_input_text:
          type: boolean
          title: Preserve Input Text
        input_tokens:
          type: boolean
          title: Input Tokens
        generated_tokens:
          type: boolean
          title: Generated Tokens
        token_logprobs:
          type: boolean
          title: Token Logprobs
        token_ranks:
          type: boolean
          title: Token Ranks
        include_stop_sequence:
          type: boolean
          title: Include Stop Sequence
      additionalProperties: false
      type: object
      title: Guardrails Text Generation Parameters
    InputWarning:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/InputWarningReason'
        message:
          type: string
          title: Message
      additionalProperties: false
      type: object
      title: Input Warning
    InputWarningReason:
      enum: [UNSUITABLE_INPUT]
      title: Input Warning Reason
    TextGenTokenClassificationResults:
    # By default open-api spec consider all fields as optional
      properties:
        input:
          anyOf:
            - items:
                $ref: '#/components/schemas/TokenClassificationResult'
              type: array
          title: Input
        output:
          anyOf:
            - items:
                $ref: '#/components/schemas/TokenClassificationResult'
              type: array
          title: Output
      additionalProperties: false
      type: object
      title: Text Gen Token Classification Results
    TokenClassificationResult:
      properties:
        start:
          type: integer
          title: Start
        end:
          type: integer
          title: End
        word:
          type: string
          title: Word
        entity:
          type: string
          title: Entity
        entity_group:
          type: string
          title: Entity Group
        score:
          type: number
          title: Score
        token_count:
          anyOf:
            - type: integer
          title: Token Count
      additionalProperties: false
      required: ["start", "end", "word", "entity", "entity_group", "score"]
      type: object
      title: Token Classification Result
